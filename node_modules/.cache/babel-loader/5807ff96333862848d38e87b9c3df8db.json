{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sergeyleontiev/Desktop/ReactProject/ReactMovies/src/Layout/Main/Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Movies } from \"../../Components/Movies/Movies\";\nimport { Preloader } from \"../../Components/Preloader/Preloader\";\nimport { Search } from \"../../Components/Search/Search\";\nimport \"./Main.css\";\n\nconst Main = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true); // componentDidMount() {\n  //   fetch(`http://www.omdbapi.com/?apikey=8d1cc66c&s=Avengers`)\n  //     .then((response) => response.json())\n  //     .then(post => this.setState({\n  //         movies: post.Search,\n  //         loading: false,\n  //     }))\n  // }\n\n  const changeBg = id => {\n    const fillArr = movies.filter(item => item.imdbID === id);\n    document.body.style.backgroundImage = `url(${fillArr[0].Poster})`;\n  };\n\n  const searchMovie = (movieName, movieType) => {\n    this.setState({\n      loading: true\n    });\n    fetch(`http://www.omdbapi.com/?apikey=  &s=${movieName}${movieType !== \"all\" ? `&type=${movieType}` : \"\"}`).then(response => response.json()).then(post => this.setState({\n      movies: post.Search,\n      loading: false\n    }));\n  };\n\n  useEffect(() => {\n    fetch(`http://www.omdbapi.com/?apikey=8d1cc66c&s=Avengers`).then(response => response.json()).then(post => {\n      setMovies(post.Search);\n      set;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      searchMovie: searchMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Movies, {\n      changeBg: changeBg,\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Main, \"72fwlr08e18pammocXupWZZTEwc=\");\n\n_c = Main;\nexport { Main };\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/sergeyleontiev/Desktop/ReactProject/ReactMovies/src/Layout/Main/Main.jsx"],"names":["React","useEffect","useState","Movies","Preloader","Search","Main","movies","setMovies","loading","setLoading","changeBg","id","fillArr","filter","item","imdbID","document","body","style","backgroundImage","Poster","searchMovie","movieName","movieType","setState","fetch","then","response","json","post","set"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,SAASC,SAAT,QAA0B,sCAA1B;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,OAAO,YAAP;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC,CAHiB,CAKjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMS,QAAQ,GAAIC,EAAD,IAAQ;AACvB,UAAMC,OAAO,GAAGN,MAAM,CAACO,MAAP,CAAeC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgBJ,EAAxC,CAAhB;AACAK,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAuC,OAAMP,OAAO,CAAC,CAAD,CAAP,CAAWQ,MAAO,GAA/D;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAC1C,SAAKC,QAAL,CAAc;AACVhB,MAAAA,OAAO,EAAE;AADC,KAAd;AAGFiB,IAAAA,KAAK,CACF,uCAAsCH,SAAU,GAC/CC,SAAS,KAAK,KAAd,GAAuB,SAAQA,SAAU,EAAzC,GAA6C,EAC9C,EAHE,CAAL,CAKGG,IALH,CAKSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EALtB,EAMGF,IANH,CAMQG,IAAI,IAAI,KAAKL,QAAL,CAAc;AAC1BlB,MAAAA,MAAM,EAAEuB,IAAI,CAACzB,MADa;AAE1BI,MAAAA,OAAO,EAAE;AAFiB,KAAd,CANhB;AAUD,GAdD;;AAgBAR,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,KAAK,CAAE,oDAAF,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZtB,MAAAA,SAAS,CAACsB,IAAI,CAACzB,MAAN,CAAT;AACA0B,MAAAA,GAAG;AACJ,KALH;AAMD,GAPQ,EAON,EAPM,CAAT;AASE,sBACE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAET;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGb,OAAO,gBACN,QAAC,MAAD;AACE,MAAA,QAAQ,EAAEE,QADZ;AAEE,MAAA,MAAM,EAAEJ;AAFV;AAAA;AAAA;AAAA;AAAA,YADM,gBAMN,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAzDH;;GAAMD,I;;KAAAA,I;AA2DN,SAASA,IAAT","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Movies } from \"../../Components/Movies/Movies\";\nimport { Preloader } from \"../../Components/Preloader/Preloader\";\nimport { Search } from \"../../Components/Search/Search\";\nimport \"./Main.css\";\n\nconst Main = () => {\n\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // componentDidMount() {\n  //   fetch(`http://www.omdbapi.com/?apikey=8d1cc66c&s=Avengers`)\n  //     .then((response) => response.json())\n  //     .then(post => this.setState({\n  //         movies: post.Search,\n  //         loading: false,\n  //     }))\n  // }\n\n  const changeBg = (id) => {\n    const fillArr = movies.filter((item) => item.imdbID === id);\n    document.body.style.backgroundImage = `url(${fillArr[0].Poster})`;\n  };\n\n  const searchMovie = (movieName, movieType) => {\n      this.setState({\n          loading: true,\n      })\n    fetch(\n      `http://www.omdbapi.com/?apikey=  &s=${movieName}${\n        movieType !== \"all\" ? `&type=${movieType}` : \"\"\n      }`\n    )\n      .then((response) => response.json())\n      .then(post => this.setState({\n        movies: post.Search,\n        loading: false,\n    }))\n  };\n\n  useEffect(() => {\n    fetch(`http://www.omdbapi.com/?apikey=8d1cc66c&s=Avengers`)\n      .then(response => response.json())\n      .then(post => {\n        setMovies(post.Search);\n        set\n      })\n  }, [])\n\n    return (\n      <main className=\"mainContainer\">\n        <Search searchMovie={searchMovie} />\n        {loading ? (\n          <Movies\n            changeBg={changeBg}\n            movies={movies}\n          />\n        ) : (\n          <Preloader />\n        )}\n      </main>\n    );\n  }\n\nexport { Main };\n"]},"metadata":{},"sourceType":"module"}