{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergeyleontiev/Desktop/ReactProject/movies/src/Components/Movies/Movies.jsx\";\nimport React, { Component } from \"react\";\nimport { Movie } from \"../Movie/Movie\";\nimport { Preloader } from \"../Preloader/Preloader\";\nimport { Search } from \"../Search/Search\";\nimport './Movies.css';\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: []\n    };\n\n    this.changeBg = id => {\n      const fillArr = this.state.movies.filter(item => item.imdbID === id);\n      document.body.style.backgroundImage = `url(${fillArr[0].Poster})`;\n    };\n\n    this.searchMovie = e => {\n      e.preventDefault();\n      fetch(`http://www.omdbapi.com/?apikey=8d1cc66c&s=${document.getElementById('search').value}`).then(response => response.json()).then(post => {\n        if (post.Search === undefined) {\n          this.setState({\n            movies: []\n          });\n        } else {\n          this.setState({\n            movies: post.Search\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://www.omdbapi.com/?apikey=8d1cc66c&s=Avengeradsasds').then(response => response.json()).then(post => {\n      if (post.Search === undefined) {\n        this.setState({\n          movies: []\n        });\n      } else {\n        this.setState({\n          movies: post.Search\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      movies\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-wrapper grey darken-4\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"search\",\n                type: \"search\",\n                value: this.state.search,\n                onChange: e => this.setState({\n                  search: e.target.value\n                }),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"label-icon\",\n                htmlFor: \"search\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons\",\n                  children: \"search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 80\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"material-icons\",\n                children: \"close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), movies.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-container\",\n        children: movies.map(movie => {\n          return /*#__PURE__*/_jsxDEV(Movie, {\n            movieId: movie.imdbID,\n            title: movie.Title,\n            year: movie.Year,\n            poster: movie.Poster,\n            changeBg: this.changeBg\n          }, movie.imdbID, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport { Movies };","map":{"version":3,"sources":["/Users/sergeyleontiev/Desktop/ReactProject/movies/src/Components/Movies/Movies.jsx"],"names":["React","Component","Movie","Preloader","Search","Movies","state","movies","changeBg","id","fillArr","filter","item","imdbID","document","body","style","backgroundImage","Poster","searchMovie","e","preventDefault","fetch","getElementById","value","then","response","json","post","undefined","setState","componentDidMount","render","search","target","length","map","movie","Title","Year"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Movie } from \"../Movie/Movie\";\nimport { Preloader } from \"../Preloader/Preloader\";\nimport { Search } from \"../Search/Search\";\nimport './Movies.css';\n\nclass Movies extends Component {\n    state = {\n        movies: []\n    }\n\n    changeBg = (id) => {\n        const fillArr = this.state.movies.filter(item => item.imdbID === id);\n        document.body.style.backgroundImage = `url(${fillArr[0].Poster})`;\n    }\n\n    componentDidMount() {\n        fetch('http://www.omdbapi.com/?apikey=8d1cc66c&s=Avengeradsasds')\n            .then(response => response.json())\n            .then(post => {\n                if(post.Search === undefined) {\n                    this.setState({\n                        movies: [],\n                    })\n                } else {\n                    this.setState({\n                        movies: post.Search\n                    })\n                }\n            })\n    }\n\n    searchMovie = (e) => {\n        e.preventDefault();\n        fetch(`http://www.omdbapi.com/?apikey=8d1cc66c&s=${document.getElementById('search').value}`)\n            .then(response => response.json())\n            .then(post => {\n                if(post.Search === undefined) {\n                    this.setState({\n                        movies: [],\n                    })\n                } else {\n                    this.setState({\n                        movies: post.Search\n                    })\n                }\n            })\n    }\n\n    render() {\n        const {movies} = this.state;\n        return (\n            <React.Fragment>\n                \n                <nav>\n                    <div className=\"nav-wrapper grey darken-4\">\n                        <form>\n                            <div className=\"input-field\">\n                                <input \n                                    id=\"search\" \n                                    type=\"search\"\n                                    value={this.state.search}\n                                    onChange={(e) => this.setState({\n                                        search: e.target.value,\n                                    })} \n                                    required \n                                />\n                                <label className=\"label-icon\" htmlFor=\"search\"><i className=\"material-icons\">search</i></label>\n                                <i className=\"material-icons\">close</i>\n                            </div>\n                        </form>\n                    </div>\n                </nav>\n\n                {  \n                    movies.length ? \n                    <div className=\"movie-container\">\n                       {\n                        movies.map(movie => {\n                            return ( \n                                <Movie\n                                    key={movie.imdbID}\n                                    movieId={movie.imdbID}\n                                    title={movie.Title}\n                                    year={movie.Year}\n                                    poster={movie.Poster}\n                                    changeBg = {this.changeBg}\n                                />\n                            )\n                        })\n                       }\n                    </div>\n                 : <Preloader /> \n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport { Movies }"]},"metadata":{},"sourceType":"module"}